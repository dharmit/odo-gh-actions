"use strict";(self.webpackChunkodo_dev=self.webpackChunkodo_dev||[]).push([[3513],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>c});var a=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var d=a.createContext({}),s=function(e){var n=a.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},p=function(e){var n=s(e.components);return a.createElement(d.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,d=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(t),c=i,h=u["".concat(d,".").concat(c)]||u[c]||m[c]||o;return t?a.createElement(h,r(r({ref:n},p),{},{components:t})):a.createElement(h,r({ref:n},p))}));function c(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,r=new Array(o);r[0]=u;var l={};for(var d in n)hasOwnProperty.call(n,d)&&(l[d]=n[d]);l.originalType=e,l.mdxType="string"==typeof e?e:i,r[1]=l;for(var s=2;s<o;s++)r[s]=t[s];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},1170:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var a=t(3117),i=(t(7294),t(3905));const o={title:"odo dev"},r=void 0,l={unversionedId:"command-reference/dev",id:"command-reference/dev",title:"odo dev",description:"Description",source:"@site/docs/command-reference/dev.md",sourceDirName:"command-reference",slug:"/command-reference/dev",permalink:"/odo-gh-actions/docs/command-reference/dev",editUrl:"https://github.com/redhat-developer/odo/edit/main/docs/website/docs/command-reference/dev.md",tags:[],version:"current",frontMatter:{title:"odo dev"},sidebar:"tutorialSidebar",previous:{title:"odo describe component",permalink:"/odo-gh-actions/docs/command-reference/describe-component"},next:{title:"odo init",permalink:"/odo-gh-actions/docs/command-reference/init"}},d={},s=[{value:"Description",id:"description",level:2},{value:"Running the Command",id:"running-the-command",level:2},{value:"Running an alternative command",id:"running-an-alternative-command",level:3},{value:"Running an alternative build command",id:"running-an-alternative-build-command",level:4},{value:"Running an alternative run command",id:"running-an-alternative-run-command",level:4},{value:"Substituting variables",id:"substituting-variables",level:3},{value:"Examples",id:"examples",level:4},{value:"Devfile (Advanced Usage)",id:"devfile-advanced-usage",level:2},{value:"Devfile Overview",id:"devfile-overview",level:3},{value:"<code>metadata</code>",id:"metadata",level:3},{value:"<code>starterProjects</code>",id:"starterprojects",level:3},{value:"<code>commands</code>",id:"commands",level:3},{value:"<code>components</code>",id:"components",level:3},{value:"Full Example",id:"full-example",level:3},{value:"State File",id:"state-file",level:2},{value:"Env File",id:"env-file",level:2}],p={toc:s};function m(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"description"},"Description"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"odo dev")," is used in order to quickly and effectively iterate through your development process for building an application."),(0,i.kt)("p",null,"This is ",(0,i.kt)("a",{parentName:"p",href:"../introduction#what-is-inner-loop-and-outer-loop"},"inner loop")," development and allows you to code, build, run and test the application in a continuous workflow."),(0,i.kt)("h2",{id:"running-the-command"},"Running the Command"),(0,i.kt)("p",null,"If you haven't already done so, you must ",(0,i.kt)("a",{parentName:"p",href:"../command-reference/init"},"initialize")," your source code with the ",(0,i.kt)("inlineCode",{parentName:"p"},"odo init")," command."),(0,i.kt)("p",null,"Afterwards, run ",(0,i.kt)("inlineCode",{parentName:"p"},"odo dev"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-console"},"odo dev\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-console"},"$ odo dev\n  __\n /  \\__     Developing using the my-nodejs-app Devfile\n \\__/  \\    Namespace: default\n /  \\__/    odo version: v3.0.0-alpha1\n \\__/\n\n\u21aa Deploying to the cluster in developer mode\n \u2713  Waiting for Kubernetes resources [3s]\n \u2713  Syncing files into the container [335ms]\n \u2713  Building your application in container on cluster [2s]\n \u2713  Executing the application [1s]\n\nYour application is now running on the cluster\n - Forwarding from 127.0.0.1:40001 -> 3000\n\nWatching for changes in the current directory /Users/user/nodejs\nPress Ctrl+c to exit `odo dev` and delete resources from the cluster\n")),(0,i.kt)("p",null,"In the above example, three things have happened:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Your application has been built and deployed to the cluster"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"odo")," has port-forwarded your application for local accessibility"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"odo")," will watch for changes in the current directory and rebuild the application when changes are detected")),(0,i.kt)("p",null,"You can press Ctrl-c at any time to terminate the development session. The command can take a few moment to terminate, as it\nwill first delete all resources deployed into the cluster for this session before terminating."),(0,i.kt)("h3",{id:"running-an-alternative-command"},"Running an alternative command"),(0,i.kt)("h4",{id:"running-an-alternative-build-command"},"Running an alternative build command"),(0,i.kt)("p",null,"By default, ",(0,i.kt)("inlineCode",{parentName:"p"},"odo dev")," builds the application using the default Build command defined in the Devfile,\ni.e, the command with a group ",(0,i.kt)("inlineCode",{parentName:"p"},"kind")," set to ",(0,i.kt)("inlineCode",{parentName:"p"},"build")," and with ",(0,i.kt)("inlineCode",{parentName:"p"},"isDefault")," set to ",(0,i.kt)("inlineCode",{parentName:"p"},"true"),", if any."),(0,i.kt)("p",null,"Passing the ",(0,i.kt)("inlineCode",{parentName:"p"},"build-command")," flag allows to override this behavior by running any other command, provided it is in the ",(0,i.kt)("inlineCode",{parentName:"p"},"build")," group in the Devfile."),(0,i.kt)("p",null,"For example, given the following excerpt from a Devfile:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'- id: my-build\n  exec:\n    commandLine: go build main.go\n    component: tools\n    workingDir: ${PROJECT_SOURCE}\n    group:\n      isDefault: true\n      kind: build\n\n- id: my-build-with-version\n  exec:\n    commandLine: go build -ldflags="-X main.version=v1.0.0" main.go\n    component: tools\n    workingDir: ${PROJECT_SOURCE}\n    group:\n      kind: build\n')),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"running ",(0,i.kt)("inlineCode",{parentName:"li"},"odo dev")," will build the application using the default ",(0,i.kt)("inlineCode",{parentName:"li"},"my-build")," command."),(0,i.kt)("li",{parentName:"ul"},"running ",(0,i.kt)("inlineCode",{parentName:"li"},"odo dev --build-command my-build-with-version")," will build the application using the ",(0,i.kt)("inlineCode",{parentName:"li"},"my-build-with-version")," command:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-console"},"odo dev --build-command my-build-with-version\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-console"},"$ odo dev --build-command my-build-with-version\n\n  __\n /  \\__     Developing using the my-sample-go Devfile\n \\__/  \\    Namespace: default\n /  \\__/    odo version: v3.0.0-alpha3\n \\__/\n\n\u21aa Deploying to the cluster in developer mode\n \u2713  Waiting for Kubernetes resources [39s]\n \u2713  Syncing files into the container [84ms]\n \u2713  Building your application in container on cluster (command: my-build-with-version) [456ms]\n \u2022  Executing the application (command: run)  ...\n\nYour application is now running on the cluster\n - Forwarding from 127.0.0.1:40001 -> 8080\n\nWatching for changes in the current directory /path/to/my/sources/go-app\nPress Ctrl+c to exit `odo dev` and delete resources from the cluster\n\n")),(0,i.kt)("h4",{id:"running-an-alternative-run-command"},"Running an alternative run command"),(0,i.kt)("p",null,"By default, ",(0,i.kt)("inlineCode",{parentName:"p"},"odo dev")," executes the default Run command defined in the Devfile,\ni.e, the command with a group ",(0,i.kt)("inlineCode",{parentName:"p"},"kind")," set to ",(0,i.kt)("inlineCode",{parentName:"p"},"run")," and its ",(0,i.kt)("inlineCode",{parentName:"p"},"isDefault")," field set to ",(0,i.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,i.kt)("p",null,"Passing the ",(0,i.kt)("inlineCode",{parentName:"p"},"run-command")," flag allows to override this behavior by running any other non-default command, provided it is in the ",(0,i.kt)("inlineCode",{parentName:"p"},"run")," group in the Devfile."),(0,i.kt)("p",null,"For example, given the following excerpt from a Devfile:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"- id: my-run\n  exec:\n    commandLine: mvn spring-boot:run\n    component: tools\n    workingDir: ${PROJECT_SOURCE}\n    group:\n      isDefault: true\n      kind: run\n\n- id: my-run-with-postgres\n  exec:\n    commandLine: mvn spring-boot:run -Dspring-boot.run.profiles=postgres\n    component: tools\n    workingDir: ${PROJECT_SOURCE}\n    group:\n      isDefault: false\n      kind: run\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"running ",(0,i.kt)("inlineCode",{parentName:"li"},"odo dev")," will run the default ",(0,i.kt)("inlineCode",{parentName:"li"},"my-run")," command"),(0,i.kt)("li",{parentName:"ul"},"running ",(0,i.kt)("inlineCode",{parentName:"li"},"odo dev --run-command my-run-with-postgres")," will run the ",(0,i.kt)("inlineCode",{parentName:"li"},"my-run-with-postgres")," command:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-console"},"odo dev --run-command my-run-with-postgres\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-console"},"$ odo dev --run-command my-run-with-postgres\n\n  __\n /  \\__     Developing using the my-java-springboot-app Devfile\n \\__/  \\    Namespace: default\n /  \\__/    odo version: v3.0.0-alpha3\n \\__/\n\n\u21aa Deploying to the cluster in developer mode\n \u2713  Added storage m2 to my-java-springboot-app\n \u2713  Creating kind ServiceBinding [8ms]\n \u2713  Waiting for Kubernetes resources [39s]\n \u2713  Syncing files into the container [84ms]\n \u2713  Building your application in container on cluster (command: build) [51s]\n \u2022  Executing the application (command: my-run-with-postgres)  ...\n\nYour application is now running on the cluster\n - Forwarding from 127.0.0.1:40002 -> 8080\n\nWatching for changes in the current directory /path/to/my/sources/java-springboot-app\nPress Ctrl+c to exit `odo dev` and delete resources from the cluster\n\n")),(0,i.kt)("h3",{id:"substituting-variables"},"Substituting variables"),(0,i.kt)("p",null,"The Devfile can define variables to make the Devfile parameterizable. The Devfile can define values for these variables, and you\ncan override the values for variables from the command line when running ",(0,i.kt)("inlineCode",{parentName:"p"},"odo dev"),", using the ",(0,i.kt)("inlineCode",{parentName:"p"},"--var")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"--var-file")," options."),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"--var")," option is a repeatable option that takes a ",(0,i.kt)("inlineCode",{parentName:"p"},"variable=value")," pair, where ",(0,i.kt)("inlineCode",{parentName:"p"},"=value")," is optional. If the ",(0,i.kt)("inlineCode",{parentName:"p"},"=value")," is omitted, the value is extracted from the environment variable named ",(0,i.kt)("inlineCode",{parentName:"p"},"variable"),". In this case, if the environment variable with this name is not defined, the value defined into the Devfile will be used."),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"--var-file")," option takes a filename as argument. The file contains a line-separated list of ",(0,i.kt)("inlineCode",{parentName:"p"},"variable=value")," pairs, with the same behaviour as before.  "),(0,i.kt)("p",null,"Note that the values passed with the ",(0,i.kt)("inlineCode",{parentName:"p"},"--var")," option overrides the values obtained with the ",(0,i.kt)("inlineCode",{parentName:"p"},"--var-file")," option."),(0,i.kt)("h4",{id:"examples"},"Examples"),(0,i.kt)("p",null,"Considering the Devfile contains this ",(0,i.kt)("inlineCode",{parentName:"p"},"variables")," field:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"variables:\n  USER: anonymous\n  DEBUG: false\n")),(0,i.kt)("p",null,"This command will override the ",(0,i.kt)("inlineCode",{parentName:"p"},"USER")," Devfile variable with the value of the ",(0,i.kt)("inlineCode",{parentName:"p"},"USER")," environment variable, if it is defined.\nIt will also override the value of the ",(0,i.kt)("inlineCode",{parentName:"p"},"DEBUG")," Devfile variable with the ",(0,i.kt)("inlineCode",{parentName:"p"},"true")," value."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"odo dev --var USER --var DEBUG=true\n")),(0,i.kt)("p",null,"If you create a file ",(0,i.kt)("inlineCode",{parentName:"p"},"config.vars")," containing:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"USER\nDEBUG=true\n")),(0,i.kt)("p",null,"The following command will have the same behaviour as the previous one:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"odo dev --var-file config.vars\n")),(0,i.kt)("p",null,"The following command will override the ",(0,i.kt)("inlineCode",{parentName:"p"},"USER")," Devfile variable with the ",(0,i.kt)("inlineCode",{parentName:"p"},"john")," value:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"odo dev --var USER=john --var-file config.vars\n")),(0,i.kt)("h2",{id:"devfile-advanced-usage"},"Devfile (Advanced Usage)"),(0,i.kt)("h3",{id:"devfile-overview"},"Devfile Overview"),(0,i.kt)("p",null,"When ",(0,i.kt)("inlineCode",{parentName:"p"},"odo dev")," is ran, it first looks in the ",(0,i.kt)("inlineCode",{parentName:"p"},"devfile.yaml")," for the instructions to be executed, specifically: ",(0,i.kt)("inlineCode",{parentName:"p"},"components")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"commands"),"."),(0,i.kt)("p",null,"Each command has a group ",(0,i.kt)("inlineCode",{parentName:"p"},"kind")," key which correspond to either: ",(0,i.kt)("inlineCode",{parentName:"p"},"build"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"run"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"test"),", or ",(0,i.kt)("inlineCode",{parentName:"p"},"debug"),"."),(0,i.kt)("p",null,"These instructions make up the development cycle of ",(0,i.kt)("inlineCode",{parentName:"p"},"odo dev"),"."),(0,i.kt)("p",null,"With the following example ",(0,i.kt)("inlineCode",{parentName:"p"},"devfile.yaml")," file generated by ",(0,i.kt)("inlineCode",{parentName:"p"},"odo init")," and selecting ",(0,i.kt)("inlineCode",{parentName:"p"},"nodejs"),", a container image will be pushed to the cluster, as well as your source code in order to start the development inner loop cycle."),(0,i.kt)("p",null,"A much more descriptive explanation on each part of a Devfile can be found on the ",(0,i.kt)("a",{parentName:"p",href:"https://devfile.io/docs/devfile/2.0.0/user-guide/api-reference/"},"Devfile API reference")," site."),(0,i.kt)("p",null,"Below, we'll explain each section of the corresponding Devfile:"),(0,i.kt)("h3",{id:"metadata"},(0,i.kt)("inlineCode",{parentName:"h3"},"metadata")),(0,i.kt)("p",null,"Descriptive registry information with regards to the devfile being used."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"metadata:\n  description: Stack with Node.js 14\n  displayName: Node.js Runtime\n  icon: https://nodejs.org/static/images/logos/nodejs-new-pantone-black.svg\n  language: javascript\n  name: my-nodejs-app\n  projectType: nodejs\n  tags:\n  - NodeJS\n  - Express\n  - ubi8\n  version: 1.0.1\nschemaVersion: 2.0.0\n")),(0,i.kt)("h3",{id:"starterprojects"},(0,i.kt)("inlineCode",{parentName:"h3"},"starterProjects")),(0,i.kt)("p",null,"The starter projects available for this devfile, shown when running ",(0,i.kt)("inlineCode",{parentName:"p"},"odo init"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"starterProjects:\n- git:\n    remotes:\n      origin: https://github.com/odo-devfiles/nodejs-ex.git\n  name: nodejs-starter\n")),(0,i.kt)("h3",{id:"commands"},(0,i.kt)("inlineCode",{parentName:"h3"},"commands")),(0,i.kt)("p",null,"The list of commands to be used when running ",(0,i.kt)("inlineCode",{parentName:"p"},"odo dev"),"."),(0,i.kt)("p",null,"Each command contains what will be ran within the container."),(0,i.kt)("p",null,"The four groups are: build, run, test and debug."),(0,i.kt)("p",null,"Build is what is initially ran when deploying to the cluster. It is what builds the command from the sources synced to the container."),(0,i.kt)("p",null,"Run executes the command after it has been built from sources. "),(0,i.kt)("p",null,"Debug is used instead of Run when running ",(0,i.kt)("inlineCode",{parentName:"p"},"odo dev --debug"),"."),(0,i.kt)("p",null,"Test executes any tests which are available and part of your application. (This is NOT-YET-IMPLEMENTED in odo)"),(0,i.kt)("p",null,"All of these commands are needed to: build the program, execute the program, debug the application and run any applicable tests."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"commands:\n- exec:\n    commandLine: npm install\n    component: runtime\n    group:\n      isDefault: true\n      kind: build\n    workingDir: ${PROJECT_SOURCE}\n  id: install\n- exec:\n    commandLine: npm start\n    component: runtime\n    group:\n      isDefault: true\n      kind: run\n    workingDir: ${PROJECT_SOURCE}\n  id: run\n- exec:\n    commandLine: npm run debug\n    component: runtime\n    group:\n      isDefault: true\n      kind: debug\n    workingDir: ${PROJECT_SOURCE}\n  id: debug\n- exec:\n    commandLine: npm test\n    component: runtime\n    group:\n      isDefault: true\n      kind: test\n    workingDir: ${PROJECT_SOURCE}\n  id: test\n")),(0,i.kt)("h3",{id:"components"},(0,i.kt)("inlineCode",{parentName:"h3"},"components")),(0,i.kt)("p",null,"Components can include containers as well as Kubernetes yaml."),(0,i.kt)("p",null,"In our example, the nodejs container is being used on port 3000."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"components:\n- name: runtime\n  container:\n    endpoints:\n    - name: http-3000\n      targetPort: 3000\n    image: registry.access.redhat.com/ubi8/nodejs-14:latest\n    memoryLimit: 1024Mi\n    mountSources: true\n")),(0,i.kt)("p",null,"Note that ",(0,i.kt)("inlineCode",{parentName:"p"},"odo")," will set the container entrypoint to ",(0,i.kt)("inlineCode",{parentName:"p"},"tail -f /dev/null")," if no ",(0,i.kt)("inlineCode",{parentName:"p"},"command")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"args")," fields are explicitly defined for this component in the Devfile.\nThis is a temporary workaround that allows ",(0,i.kt)("inlineCode",{parentName:"p"},"odo")," to start non-terminating containers in which the Devfile commands will get executed."),(0,i.kt)("h3",{id:"full-example"},"Full Example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"metadata:\n  description: Stack with Node.js 14\n  displayName: Node.js Runtime\n  icon: https://nodejs.org/static/images/logos/nodejs-new-pantone-black.svg\n  language: javascript\n  name: my-nodejs-app\n  projectType: nodejs\n  tags:\n  - NodeJS\n  - Express\n  - ubi8\n  version: 1.0.1\nschemaVersion: 2.0.0\n\nstarterProjects:\n- git:\n    remotes:\n      origin: https://github.com/odo-devfiles/nodejs-ex.git\n  name: nodejs-starter\n\ncommands:\n- exec:\n    commandLine: npm install\n    component: runtime\n    group:\n      isDefault: true\n      kind: build\n    workingDir: ${PROJECT_SOURCE}\n  id: install\n- exec:\n    commandLine: npm start\n    component: runtime\n    group:\n      isDefault: true\n      kind: run\n    workingDir: ${PROJECT_SOURCE}\n  id: run\n- exec:\n    commandLine: npm run debug\n    component: runtime\n    group:\n      isDefault: true\n      kind: debug\n    workingDir: ${PROJECT_SOURCE}\n  id: debug\n- exec:\n    commandLine: npm test\n    component: runtime\n    group:\n      isDefault: true\n      kind: test\n    workingDir: ${PROJECT_SOURCE}\n  id: test\n\ncomponents:\n- name: runtime\n  container:\n    endpoints:\n    - name: http-3000\n      targetPort: 3000\n    image: registry.access.redhat.com/ubi8/nodejs-14:latest\n    memoryLimit: 1024Mi\n    mountSources: true\n")),(0,i.kt)("h2",{id:"state-file"},"State File"),(0,i.kt)("p",null,"When the command ",(0,i.kt)("inlineCode",{parentName:"p"},"odo dev")," is executed, the state of the command is saved to the file ",(0,i.kt)("inlineCode",{parentName:"p"},".odo/devstate.json"),". "),(0,i.kt)("p",null,"This state file contains the forwarded ports:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n "forwardedPorts": [\n  {\n   "containerName": "runtime",\n   "localAddress": "127.0.0.1",\n   "localPort": 40001,\n   "containerPort": 3000\n  }\n ]\n}\n')),(0,i.kt)("h2",{id:"env-file"},"Env File"),(0,i.kt)("p",null,"When ",(0,i.kt)("inlineCode",{parentName:"p"},"odo dev")," is executed, a ",(0,i.kt)("inlineCode",{parentName:"p"},".odo/env/env.yaml")," file is created if it does not exist. It stores the namespace/project that will be used by the component, and its default value is set to currently active namespace/project."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"ComponentSettings:\n  Project: myproject\n")),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Creating, deleting or setting a namespace/project will not modify this value. To use a different namespace/project, user will have to manually change ",(0,i.kt)("inlineCode",{parentName:"p"},".ComponentSettings.Project")," value, or delete the ",(0,i.kt)("inlineCode",{parentName:"p"},".odo")," directory."))))}m.isMDXComponent=!0}}]);